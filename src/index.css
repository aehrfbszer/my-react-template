@layer {
  * {
    /*删除默认边距*/
    margin: 0;
  }

  body {
    width: 100dvw;
    height: 100dvh;
    overflow: hidden;
    padding: 0;
    margin: 0;
    /*改善文本渲染(该属性仅适用于 macOS?)*/
    -webkit-font-smoothing: antialiased;

    /*防止margin塌陷，overflow没有用*/
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr;

    #root {
      /*同理，防margin塌陷*/
      display: flex;
      flex-direction: column;
      overflow: auto;

      /*根据Web内容无障碍指南 (WCAG) 行高：一般的情况下标题用1.2 ，段落至少用1.5*/
      line-height: 1.5;

      /*该isolation属性允许我们创建一个新的堆叠上下文，而无需设置z-index(有点麻烦，详细的用处自己搜索)*/
      isolation: isolate;
    }
  }

  img,
  picture,
  video,
  canvas,
  svg {
    /*禁止display为行内元素，行内元素会受line-height影响，会有边距(line-height带来的)*/
    display: block;
    /*大多数块级元素会自动增大/缩小以适应其父级，但诸如媒体元素则<img>比较特殊*/
    /*这样做是为了防止大图像溢出（如果将它们放置在宽度不足以容纳它们的容器中）。*/
    /*由于max-width会覆盖width，写了width:120%会不生效，下面这一条所以先禁止*/
    /*max-width: 100%;*/
  }

  p {
    /*算法会尝试使每行文本的长度大致相同。使两行内容看起来更加平衡。(balance、pretty效果相同，pretty更耗性能)*/
    text-wrap: pretty;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    /*算法会尝试使每行文本的长度大致相同。使两行内容看起来更加平衡。(balance、pretty效果相同，pretty更耗性能)*/
    text-wrap: balance;
  }

  /*默认情况下，按钮和输入框不会从其父元素继承排版样式。相反，它们有自己奇怪的样式。*/
  input,
  button,
  textarea,
  select {
    /*font是如font-size、font-weight和font-family等的简写*/
    /*inherit继承父元素样式*/
    font: inherit;
  }
}